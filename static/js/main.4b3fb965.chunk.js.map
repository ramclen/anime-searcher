{"version":3,"sources":["components/AnimeList.js","api/kitsu.js","components/SearchBar.js","components/App.js","index.js"],"names":["AnimeList","state","animes","this","props","className","map","anime","key","id","React","Component","CardComponent","src","img","alt","style","title","description","kitsu","axios","create","baseURL","SearchBar","onChange","useState","inputValue","setInputValue","isSearching","setSearching","setAnimes","_onChange","value","get","then","res","data","e","attributes","titles","en_jp","searchTitle","onClick","target","onKeyPress","event","onBlur","setTimeout","type","placeholder","App","_animes","synopsis","posterImage","medium","setState","hint","searchAnime","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b3fb965.chunk.js","sourcesContent":["import React from \"react\";\n\n\nexport default class AnimeList extends React.Component {\n  state = { animes: [] };\n\n  render() {\n    if (!this.props.animes) {\n      return (<div />);\n    }\n\n    return (\n      <div className=\"row\">\n        {this.props.animes.map(anime => (\n          <div key={anime.id} className=\"col-md-2 mb-3\">\n            <CardComponent anime={anime} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst CardComponent = ({ anime }) => {\n\n  return (\n    <div className=\"card bg-dark text-white\">\n      <img\n        src={anime.img}\n        className=\"card-img\" alt=\"anime\"\n        style={{}}\n      />\n      <div className=\"card-img-overlay\">\n        <h5 className=\"card-title\">{anime.title}</h5>\n        <p className=\"card-text\">{anime.description}</p>\n      </div>\n    </div>\n  )\n}","import axios from \"axios\";\n\nconst kitsu = axios.create({ baseURL: 'https://kitsu.io/api/edge' });\n\nexport default kitsu;","import React, { useState } from \"react\";\nimport \"./autocomplete.css\"\nimport kitsu from \"../api/kitsu\";\n\nconst SearchBar = ({ onChange }) => {\n  const [inputValue, setInputValue] = useState(\"\")\n  const [isSearching, setSearching] = useState(false)\n  const [animes, setAnimes] = useState([])\n\n  const onKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      onChange(inputValue)\n    }\n  }\n\n  const searchTitle = (value) => {\n    kitsu.get(`anime?fields[anime]=titles,id&page[limit]=3&filter[text]=${value}`)\n      .then(res => res.data)\n      .then(res => {\n        setAnimes(res.data.map(e => ({ title: e.attributes.titles.en_jp, id: e.id })))\n      });\n  }\n\n  const onBlur = () => {\n    setTimeout(() => {\n      setSearching(false)\n    }, 250)\n  }\n\n  const elementSelected = (value) => {\n    setInputValue(value);\n    onChange(value);\n  }\n\n  const _onChange = (value) => {\n    setInputValue(value);\n    searchTitle(value);\n  }\n\n  return (\n    <div className=\" mb-3\"  >\n      <input value={inputValue}\n        onClick={() => setSearching(true)}\n        onChange={e => _onChange(e.target.value)}\n        onKeyPress={onKeyPress}\n        onBlur={onBlur}\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Search\"\n      />\n      <div className={`autocomplete mb-3 ${isSearching ? 'show' : ''}`}>\n        <ul>\n          {animes.map(anime => {\n            return <li key={anime.id} onClick={(e) => elementSelected(anime.title)}> {anime.title} </li>\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport \"./card-overlay.css\";\nimport AnimeList from \"./AnimeList\";\nimport SearchBar from \"./SearchBar\"\nimport kitsu from \"../api/kitsu\";\n\n\nexport default class App extends React.Component {\n  state = { animes: [] };\n\n  componentDidMount() {\n    kitsu.get('anime?page[limit]=20')\n      .then(res => res.data)\n      .then(res => {\n        let _animes = res.data.map(e => {\n          return {\n            id: e.id,\n            title: e.attributes.titles.en_jp,\n            description: e.attributes.synopsis,\n            img: e.attributes.posterImage.medium\n          }\n        })\n        this.setState({ animes: _animes })\n      });\n  }\n\n  searchAnime(hint) {\n    kitsu.get(`anime?page[limit]=20&filter[text]=${hint}`)\n      .then(res => res.data)\n      .then(res => {\n        let _animes = res.data.map(e => {\n          return {\n            id: e.id,\n            title: e.attributes.titles.en_jp,\n            description: e.attributes.synopsis,\n            img: e.attributes.posterImage.medium\n          }\n        })\n        this.setState({ animes: _animes })\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <SearchBar onChange={hint => this.searchAnime(hint)} />\n        <AnimeList animes={this.state.animes}></AnimeList>\n      </div>\n\n    )\n\n  }\n}","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\"\nReactDom.render(<App></App>, document.getElementById('root'))"],"sourceRoot":""}